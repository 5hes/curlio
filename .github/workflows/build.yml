name: Build
on:
  push:
    branches:
    - main
  workflow_dispatch:
    inputs:
      task:
        description: "Build binary for aarch64"
        required: true
        type: boolean

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Push a tag
      if: env.SB == 1
      run: |
        git tag nightly
        git push origin nightly
        
    - name: Setup
      run: |
        sudo apt-get update
        # 
        sudo apt-get install musl-tools musl musl-dev build-essential pkg-config cmake libssl-dev zlib1g-dev libsqlite3-dev protobuf-compiler libc6-dev-arm64-cross gcc-multilib
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 19 all
        which ld.lld-19
        
    - name: Build
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o rustup-init.sh
        chmod 777 rustup-init.sh
        ./rustup-init.sh --help
        rm /home/runner/.cargo/bin/rust-analyzer || echo "Remove '/home/runner/.cargo/bin/rust-analyzer' error"
        rm /home/runner/.cargo/bin/rustfmt || echo "Remove '/home/runner/.cargo/bin/rustfmt' error"
        rm /home/runner/.cargo/bin/cargo-fmt || echo "Remove '/home/runner/.cargo/bin/cargo-fmt' error"
        bash rustup-init.sh -y --default-toolchain nightly
        . $HOME/.cargo/env
        export PATH=$PATH:$HOME/.cargo/bin
        rustup toolchain install nightly
        rustup run nightly rustc --version
        rustup default nightly
        rustc --version
        
        # cargo install cross --git https://github.com/cross-rs/cross
        # rustup target add aarch64-unknown-linux-musl
        # rustup target add aarch64-unknown-linux-musl --toolchain=nightly

        export CC_aarch64_unknown_linux_musl=clang-19
        export AR_aarch64_unknown_linux_musl=llvm-ar-19
        # export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_RUSTFLAGS="-Clink-self-contained=yes -Clinker=rust-lld"
        
        export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=$(which ld.lld-19)
        export CC=clang-19
        export CXX=clang++-19
        rustup update
        sudo apt-get update
        sudo apt-get install pkg-config  libssl-dev -y
        # cross build --target aarch64-unknown-linux-musl --release
        # rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
        CC=clang-19 cargo build -Zbuild-std --target aarch64-unknown-linux-musl --release

    - name: Check info
      run: |
        file target/aarch64-unknown-linux-musl/release/curlio
        ls -ltrah target/aarch64-unknown-linux-musl/release/
        tree target/aarch64-unknown-linux-musl/release

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        path: target/aarch64-unknown-linux-musl/release/

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: binary
        path: target/aarch64-unknown-linux-musl/release/curlio

    - name: GH Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: nightly
        files: target/aarch64-unknown-linux-musl/release/**
        
    - name: help
      run: |
        cargo --help
        echo -e "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        cargo build --help
